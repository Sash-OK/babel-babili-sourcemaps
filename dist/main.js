'use strict';$(function(){function a(a){return!$('.js-regions-list[data-district='+a+']').length}function b(a){for(var b=e(a.length/4),c=[];a.length;)c.push(a.splice(0,b));c=c.map(function(a){return $('<div></div>').addClass('estp-cities__cell').html(a.reduce(function(a,b){return a+=['<a class="js-check-city" data-aoguid='+b.aoguid+'>',b.offname,'</a>','<br>'].join(''),a},''))}),$('.js-cities-content').html(c)}function c(a,b){var c,d=[],f=[];for(var g in a)a.hasOwnProperty(g)&&f.push(a[g]);for(c=e(f.length/2);f.length;)d.push(f.splice(0,c));d=d.map(function(a){return $('<div></div>').addClass('estp-cities__cell').html(a.reduce(function(a,b){return a+=['<a class="estp-cities__region js-region" data-region-code='+b.regioncode+'>',b._displayname,'</a>','<br>'].join(''),a},''))});var h=$('<div></div>').addClass('estp-tabs__i').addClass('estp-tabs__i--'+b).addClass('estp-cities__table').addClass('js-regions-list').attr('data-district',b).html(d);$('.js-district-content').append(h)}function d(a,b){var c={};return $('.js-loader').show(),c='cities'===a?{action:a,regioncode:b}:'regions'===a?{action:a,_foid:b}:{action:a,aoguid:b},$.get('/ajax/fias/',c).success(function(a){return $('.js-loader').hide(),a}).error(function(a){return $('.js-loader').hide(),a})}var e=Math.ceil;console.log(2);var f=$('.js-cities-modal');({}).createDateFromW3C=function(a){var b=a.match(/(\d{4})-(\d{2})-(\d{2})T(\d{2}):(\d{2}):(\d{2})/).slice(1).map(function(a,b){return 1===b?a-1:+a});return new Date(b[0],b[1],b[2],b[3],b[4],b[5])},$('.js-cities').on('click',function(b){b.preventDefault(),a(1)?d('regions',1).then(function(a){c(a.data.regions,1),f.modal('show')}):f.modal('show')}),$('.js-district-lnk').on('click',function(){var b=$(this).data('link');a(b)&&d('regions',b).then(function(a){c(a.data.regions,b)})}),console.log(104),$('.js-district-content').on('click','.js-region',function(a){var c=$(this).data('region-code'),e='estp-cities__region--active';a.preventDefault(),$(this).hasClass(e)||($('.'+e).removeClass(e),$(this).addClass(e),d('cities',c).then(function(a){b(a.data.cities)}))}),$('.js-cities-content').on('click','.js-check-city',function(a){var b=$(this).data('aoguid');a.preventDefault(),d('save',b).then(function(a){a&&a.success&&window.location.reload()})}),console.log(166),console.log(213),function(){var a=$('.js-timer-time'),b=localStorage.getItem('estpLocalToServerTimeDelta'),c=$('.js-timer-date'),d=function(b){a.html(b.toTimeString().split(' ')[0]);var d=b.getMonth()+1,e=b.getDate();c.html([(1===(e+'').length&&'0')+e,(1===(d+'').length&&'0')+d,b.getFullYear()].join('.'))};b?d(new Date(+new Date+ +b)):d(new Date),console.log(30)}()});
//# sourceMappingURL=data:application/json;charset=utf8;base64,
